\ *********************************************************************
\ Meta compiler for generating Xcross compiled code                   *
\    Filename:      meta.txt                                          *
\    Date:          26.03.2021                                        *
\    Updated:       10.04.2021                                        *
\    MCU:           gForth                                            *
\    Copyright:     Marc PETREMANN                                    *
\    Author:        Marc PETREMANN                                    *
\ *********************************************************************



\ the TARGET vocabulary receives the headers of the
\ words to be compiled in the target
vocabulary target

\ the TRANSITION vocabulary receives words with
\ immediate action during meta-compilation
vocabulary transition

\ the FORWARD vocabulary receives the headers
\ of the reference words before
vocabulary forward

vocabulary user

vocabulary Xassembler
\ s" avr/Xassembler.txt" included
\ include avr/Xassembler.txt

\ meta contains the meta-compiler
vocabulary meta
    meta definitions


\ immediate version of only for vocabulary chaining
: [only] ( ---)
    only
; immediate

\ immediate version of forth for vocabulary chaining
: [forth] ( ---)
    forth
; immediate

\ immediate version of meta for vocabulary chaining
: [meta] ( ---)
    meta
; immediate

\ immediate version of Xassembler for vocabulary chaining
: [Xassembler] ( ---)
    Xassembler
; immediate


\ : switch  ( -- )
\   noop                            ( Context )
\   noop                            ( Current )
\   does>
\     dup @ context @ swap context !
\     over ! 2 +   \ ?? @TODO: 2 + or CELL + ??
\     dup @ current @ swap current !
\     swap !  ;


: switch  ( -- )
  0 ,                            ( Context )
  0 ,                            ( Current )
  does>
    dup @ context @ swap context !
    over ! cell +   \ ?? @TODO: 2 + or CELL + ??
    dup @ current @ swap current !
    swap !  ;



switch                            ( redefine itself)




only forth also meta also
root definitions
\ tous les mots qui suivent sont également redéfinis dans ROOT
: meta
  meta ;

: target
  target ;

:  transition
   transition ;

: forward
  forward ;

: USER
  USER ;

: Xassembler
  Xassembler ;


only forth also meta also
meta definitions
\ the following words are defined in the META vocabulary
: in-target  ( -- )             \ strength definition of words in target
    only target definitions     \ search order limited to ROOT and target
    ;



\ force definition of words in target
: in-transition  ( -- )
    only forward also           \ search order:
    target definitions          \ TRANSITION TARGET FORWARDS
    also  transition
    ;

\ word definition strength in META
: in-meta  ( -- )
    only forth also             \ search order:
    meta definitions also       \ META FORTH
    ;

\ word definition strength in FORWARDS
: in-forward  ( -- )
    forward definitions         \ order of words starting with FORWARDS
    ;


\ Memory access variables in the target
variable ADR-T                  \ memorize target address; ADRment-Target
variable DP-T                   \ and Target offset;  Dict.Pointer-Target

\ get a byte in the target
: c@-t  ( taddr -- c )
    ADR-T @ + c@
    ;

\ get a 16-bit word from the target
: @-t  ( taddr -- w )
    dup 1+ c@-t $100 *
    swap c@-t +
    byte-invert
    ;

\ get 32-bit value in the target - unused
\ : d@-t  ( taddr -- d )
\   **** @TODO: à écrire ****
\ ;

\ store a byte in the target
: c!-t  ( char taddr -- )
    ADR-T @ + c!
    ;

\ store a 16-bit word in the target
: !-t  { word taddr -- }    \ caution: local variables
    word byte-invert
    $100 /mod swap
    taddr c!-t
    taddr 1+ c!-t
    ;
