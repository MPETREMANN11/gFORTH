\ *********************************************************************
\ adapted from m328def.inc                                            *
\    Filename:      m328def.txt                                        *
\    Date:          26.03.2021                                        *
\    Updated:       07.05.2021                                        *
\    MCU:           gForth                                            *
\    Copyright:     Marc PETREMANN                                    *
\    Author:        Marc PETREMANN                                    *
\ *********************************************************************

cr ."   avr/        m328def.txt"

defined Xassembler [if]
    Xassembler definitions
[endif]

\ ***** SPECIFY DEVICE ***************************************************
string device
s" ATmega328" device $!


\ #pragma AVRPART ADMIN PART_NAME ATmega328
$1e     .equ SIGNATURE_000
$95	.equ SIGNATURE_001
$14	.equ SIGNATURE_002



\ ***** I/O REGISTER DEFINITIONS *****************************************
\ NOTE:
\ Definitions marked "MEMORY MAPPED"are extended I/O ports
\ and cannot be used with IN/OUT instructions
$c6     .equ	UDR0		\ MEMORY MAPPED
$c4     .equ	UBRR0L		\ MEMORY MAPPED
$c5     .equ	UBRR0H		\ MEMORY MAPPED
$c2     .equ	UCSR0C		\ MEMORY MAPPED
$c1     .equ	UCSR0B		\ MEMORY MAPPED
$c0     .equ    UCSR0A		\ MEMORY MAPPED
$bd     .equ	TWAMR		\ MEMORY MAPPED
$bc     .equ	TWCR		\ MEMORY MAPPED
$bb     .equ	TWDR		\ MEMORY MAPPED
$ba     .equ	TWAR		\ MEMORY MAPPED
$b9     .equ	TWSR		\ MEMORY MAPPED
$b8     .equ	TWBR		\ MEMORY MAPPED
$b6     .equ	ASSR		\ MEMORY MAPPED
$b4     .equ	OCR2B		\ MEMORY MAPPED
$b3     .equ	OCR2A		\ MEMORY MAPPED
$b2     .equ	TCNT2		\ MEMORY MAPPED
$b1     .equ	TCCR2B		\ MEMORY MAPPED
$b0     .equ	TCCR2A		\ MEMORY MAPPED
$8a     .equ	OCR1BL		\ MEMORY MAPPED
$8b     .equ	OCR1BH		\ MEMORY MAPPED
$88     .equ	OCR1AL		\ MEMORY MAPPED
$89     .equ	OCR1AH		\ MEMORY MAPPED
$86     .equ	ICR1L		\ MEMORY MAPPED
$87     .equ	ICR1H		\ MEMORY MAPPED
$84     .equ	TCNT1L		\ MEMORY MAPPED
$85     .equ	TCNT1H		\ MEMORY MAPPED
$82     .equ	TCCR1C		\ MEMORY MAPPED
$81     .equ	TCCR1B		\ MEMORY MAPPED
$80     .equ	TCCR1A		\ MEMORY MAPPED
$7f     .equ	DIDR0		\ MEMORY MAPPED
$7c     .equ	ADMUX		\ MEMORY MAPPED
$7b     .equ	ADCSRB		\ MEMORY MAPPED
$7a     .equ	ADCSRA		\ MEMORY MAPPED
$79     .equ	ADCH		\ MEMORY MAPPED
$78     .equ	ADCL		\ MEMORY MAPPED
$70     .equ	TIMSK2		\ MEMORY MAPPED
$6f     .equ	TIMSK1		\ MEMORY MAPPED
$6e     .equ	TIMSK0		\ MEMORY MAPPED
$6c     .equ	PCMSK1		\ MEMORY MAPPED
$6d     .equ	PCMSK2		\ MEMORY MAPPED
$6b     .equ	PCMSK0		\ MEMORY MAPPED
$69     .equ	EICRA		\ MEMORY MAPPED
$68     .equ	PCICR		\ MEMORY MAPPED
$66     .equ	OSCCAL		\ MEMORY MAPPED
$64     .equ	PRR		\ MEMORY MAPPED
$61     .equ	CLKPR		\ MEMORY MAPPED
$60     .equ	WDTCSR		\ MEMORY MAPPED
$3f     .equ	SREG
$3d     .equ	SPL
$3e     .equ	SPH
$37     .equ	SPMCSR
$35     .equ	MCUCR
$34     .equ	MCUSR
$33     .equ	SMCR
$30     .equ	ACSR
$2e     .equ	SPDR
$2d     .equ	SPSR
$2c     .equ	SPCR
$2b     .equ	GPIOR2
$2a     .equ	GPIOR1
$28     .equ	OCR0B
$27     .equ	OCR0A
$26     .equ	TCNT0
$25     .equ    TCCR0B
$24     .equ	TCCR0A
$23     .equ	GTCCR
$22     .equ	EEARH
$21     .equ	EEARL
$20     .equ	EEDR
$1f     .equ	EECR
$1e     .equ	GPIOR0
$1d     .equ	EIMSK
$1c     .equ	EIFR
$1b     .equ	PCIFR
$17     .equ	TIFR2
$16     .equ	TIFR1
$15     .equ	TIFR0
$0b     .equ	PORTD
$0a     .equ	DDRD
$09     .equ	PIND
$08     .equ	PORTC
$07     .equ	DDRC
$06     .equ	PINC
$05     .equ	PORTB
$04     .equ	DDRB
$03     .equ	PINB


\ ***** BIT DEFINITIONS **************************************************

\ ***** USART0 ***********************
\ UDR0 - USART I/O Data Register
0 .equ	UDR0_0		\ USART I/O Data Register bit 0
1 .equ	UDR0_1		\ USART I/O Data Register bit 1
2 .equ	UDR0_2		\ USART I/O Data Register bit 2
3 .equ	UDR0_3		\ USART I/O Data Register bit 3
4 .equ	UDR0_4		\ USART I/O Data Register bit 4
5 .equ	UDR0_5		\ USART I/O Data Register bit 5
6 .equ	UDR0_6		\ USART I/O Data Register bit 6
7 .equ	UDR0_7		\ USART I/O Data Register bit 7

\ UCSR0A - USART Control and Status Register A
0 .equ	MPCM0		\ Multi-processor Communication Mode
1 .equ	U2X0		\ Double the USART transmission speed
2 .equ	UPE0		\ Parity Error
3 .equ	DOR0		\ Data overRun
4 .equ	FE_0		\ Framing Error
5 .equ	UDRE0		\ USART Data Register Empty
6 .equ	TXC0		\ USART Transmitt Complete
7 .equ	RXC0		\ USART Receive Complete

\ UCSR0B - USART Control and Status Register B
0 .equ	TXB80		\ Transmit Data Bit 8
1 .equ	RXB80		\ Receive Data Bit 8
2 .equ	UCSZ02		\ Character Size
3 .equ	TXEN0		\ Transmitter Enable
4 .equ	RXEN0		\ Receiver Enable
5 .equ	UDRIE0		\ USART Data register Empty Interrupt Enable
6 .equ	TXCIE0		\ TX Complete Interrupt Enable
7 .equ	RXCIE0		\ RX Complete Interrupt Enable

\ UCSR0C - USART Control and Status Register C
0       .equ	UCPOL0		\ Clock Polarity
1       .equ	UCSZ00		\ Character Size
UCSZ00  .equ	UCPHA0		\ For compatibility
2       .equ	UCSZ01		\ Character Size
UCSZ01  .equ	UDORD0		\ For compatibility
3       .equ	USBS0		\ Stop Bit Select
4       .equ	UPM00		\ Parity Mode Bit 0
5       .equ	UPM01		\ Parity Mode Bit 1
6       .equ	UMSEL00		\ USART Mode Select
UMSEL00 .equ	UMSEL0		\ For compatibility
7       .equ	UMSEL01		\ USART Mode Select
UMSEL01 .equ	UMSEL1		\ For compatibility

\ UBRR0H - USART Baud Rate Register High Byte
0 .equ	UBRR8		\ USART Baud Rate Register bit 8
1 .equ	UBRR9		\ USART Baud Rate Register bit 9
2 .equ	UBRR10		\ USART Baud Rate Register bit 10
3 .equ	UBRR11		\ USART Baud Rate Register bit 11

\ UBRR0L - USART Baud Rate Register Low Byte
0 .equ	_UBRR0		\ USART Baud Rate Register bit 0
1 .equ	_UBRR1		\ USART Baud Rate Register bit 1
2 .equ	UBRR2		\ USART Baud Rate Register bit 2
3 .equ	UBRR3		\ USART Baud Rate Register bit 3
4 .equ	UBRR4		\ USART Baud Rate Register bit 4
5 .equ	UBRR5		\ USART Baud Rate Register bit 5
6 .equ	UBRR6		\ USART Baud Rate Register bit 6
7 .equ	UBRR7		\ USART Baud Rate Register bit 7


\ ***** TWI **************************
\ TWAMR - TWI (Slave) Address Mask Register
\ .equ	TWAM0	1	\
\ .equ	TWAMR0	TWAM0	\ For compatibility
\ .equ	TWAM1	2	\
\ .equ	TWAMR1	TWAM1	\ For compatibility
\ .equ	TWAM2	3	\
\ .equ	TWAMR2	TWAM2	\ For compatibility
\ .equ	TWAM3	4	\
\ .equ	TWAMR3	TWAM3	\ For compatibility
\ .equ	TWAM4	5	\
\ .equ	TWAMR4	TWAM4	\ For compatibility
\ .equ	TWAM5	6	\
\ .equ	TWAMR5	TWAM5	\ For compatibility
\ .equ	TWAM6	7	\
\ .equ	TWAMR6	TWAM6	\ For compatibility

\ TWBR - TWI Bit Rate register
0 .equ	TWBR0
1 .equ	TWBR1
2 .equ	TWBR2
3 .equ	TWBR3
4 .equ	TWBR4
5 .equ	TWBR5
6 .equ	TWBR6
7 .equ	TWBR7

\ TWCR - TWI Control Register
0 .equ	TWIE		\ TWI Interrupt Enable
2 .equ	TWEN		\ TWI Enable Bit
3 .equ	TWWC		\ TWI Write Collition Flag
4 .equ	TWSTO		\ TWI Stop Condition Bit
5 .equ	TWSTA		\ TWI Start Condition Bit
6 .equ	TWEA		\ TWI Enable Acknowledge Bit
7 .equ	TWINT		\ TWI Interrupt Flag

\ TWSR - TWI Status Register
0 .equ	TWPS0		\ TWI Prescaler
1 .equ	TWPS1		\ TWI Prescaler
3 .equ	TWS3		\ TWI Status
4 .equ	TWS4		\ TWI Status
5 .equ	TWS5		\ TWI Status
6 .equ	TWS6		\ TWI Status
7 .equ	TWS7		\ TWI Status

\ TWDR - TWI Data register
0 .equ	TWD0		\ TWI Data Register Bit 0
1 .equ	TWD1		\ TWI Data Register Bit 1
2 .equ	TWD2		\ TWI Data Register Bit 2
3 .equ	TWD3		\ TWI Data Register Bit 3
4 .equ	TWD4		\ TWI Data Register Bit 4
5 .equ	TWD5		\ TWI Data Register Bit 5
6 .equ	TWD6		\ TWI Data Register Bit 6
7 .equ	TWD7		\ TWI Data Register Bit 7

\ TWAR - TWI (Slave) Address register
0 .equ	TWGCE		\ TWI General Call Recognition Enable Bit
1 .equ	TWA0		\ TWI (Slave) Address register Bit 0
2 .equ	TWA1		\ TWI (Slave) Address register Bit 1
3 .equ	TWA2		\ TWI (Slave) Address register Bit 2
4 .equ	TWA3		\ TWI (Slave) Address register Bit 3
5 .equ	TWA4		\ TWI (Slave) Address register Bit 4
6 .equ	TWA5		\ TWI (Slave) Address register Bit 5
7 .equ	TWA6		\ TWI (Slave) Address register Bit 6


\ ***** TIMER_COUNTER_1 **************
\ TIMSK1 - Timer/Counter Interrupt Mask Register
0 .equ	TOIE1		\ Timer/Counter1 Overflow Interrupt Enable
1 .equ	OCIE1A		\ Timer/Counter1 Output CompareA Match Interrupt Enable
2 .equ	OCIE1B		\ Timer/Counter1 Output CompareB Match Interrupt Enable
5 .equ	ICIE1		\ Timer/Counter1 Input Capture Interrupt Enable

\ TIFR1 - Timer/Counter Interrupt Flag register
0 .equ	TOV1		\ Timer/Counter1 Overflow Flag
1 .equ	OCF1A		\ Output Compare Flag 1A
2 .equ	OCF1B		\ Output Compare Flag 1B
5 .equ	ICF1		\ Input Capture Flag 1

\ TCCR1A - Timer/Counter1 Control Register A
0 .equ	WGM10		\ Waveform Generation Mode
1 .equ	WGM11		\ Waveform Generation Mode
4 .equ	COM1B0		\ Compare Output Mode 1B, bit 0
5 .equ	COM1B1		\ Compare Output Mode 1B, bit 1
6 .equ	COM1A0		\ Comparet Ouput Mode 1A, bit 0
7 .equ	COM1A1		\ Compare Output Mode 1A, bit 1

\ TCCR1B - Timer/Counter1 Control Register B
0 .equ	CS10		\ Prescaler source of Timer/Counter 1
1 .equ	CS11		\ Prescaler source of Timer/Counter 1
2 .equ	CS12		\ Prescaler source of Timer/Counter 1
3 .equ	WGM12		\ Waveform Generation Mode
4 .equ	WGM13		\ Waveform Generation Mode
6 .equ	ICES1		\ Input Capture 1 Edge Select
7 .equ	ICNC1		\ Input Capture 1 Noise Canceler

\ TCCR1C - Timer/Counter1 Control Register C
6 .equ	FOC1B		\
7 .equ	FOC1A		\

\ GTCCR - General Timer/Counter Control Register
0 .equ	PSRSYNC		\ Prescaler Reset Timer/Counter1 and Timer/Counter0
7 .equ	TSM		\ Timer/Counter Synchronization Mode


\ ***** TIMER_COUNTER_2 **************
\ TIMSK2 - Timer/Counter Interrupt Mask register
0 .equ	TOIE2		\ Timer/Counter2 Overflow Interrupt Enable
TOIE2 .equ	TOIE2A		\ For compatibility
1 .equ	OCIE2A		\ Timer/Counter2 Output Compare Match A Interrupt Enable
2 .equ	OCIE2B		\ Timer/Counter2 Output Compare Match B Interrupt Enable

\ TIFR2 - Timer/Counter Interrupt Flag Register
0 .equ	TOV2		\ Timer/Counter2 Overflow Flag
1 .equ	OCF2A		\ Output Compare Flag 2A
2 .equ	OCF2B		\ Output Compare Flag 2B

\ TCCR2A - Timer/Counter2 Control Register A
0 .equ	WGM20		\ Waveform Genration Mode
1 .equ	WGM21		\ Waveform Genration Mode
4 .equ	COM2B0		\ Compare Output Mode bit 0
5 .equ	COM2B1		\ Compare Output Mode bit 1
6 .equ	COM2A0		\ Compare Output Mode bit 1
7 .equ	COM2A1		\ Compare Output Mode bit 1

\ TCCR2B - Timer/Counter2 Control Register B
0 .equ	CS20		\ Clock Select bit 0
1 .equ	CS21		\ Clock Select bit 1
2 .equ	CS22		\ Clock Select bit 2
3 .equ	WGM22		\ Waveform Generation Mode
6 .equ	FOC2B		\ Force Output Compare B
7 .equ	FOC2A		\ Force Output Compare A

\ TCNT2 - Timer/Counter2
\ .equ	TCNT2_0	0	\ Timer/Counter 2 bit 0
\ .equ	TCNT2_1	1	\ Timer/Counter 2 bit 1
\ .equ	TCNT2_2	2	\ Timer/Counter 2 bit 2
\ .equ	TCNT2_3	3	\ Timer/Counter 2 bit 3
\ .equ	TCNT2_4	4	\ Timer/Counter 2 bit 4
\ .equ	TCNT2_5	5	\ Timer/Counter 2 bit 5
\ .equ	TCNT2_6	6	\ Timer/Counter 2 bit 6
\ .equ	TCNT2_7	7	\ Timer/Counter 2 bit 7

\ OCR2A - Timer/Counter2 Output Compare Register A
\ .equ	OCR2A_0	0	\ Timer/Counter2 Output Compare Register Bit 0
\ .equ	OCR2A_1	1	\ Timer/Counter2 Output Compare Register Bit 1
\ .equ	OCR2A_2	2	\ Timer/Counter2 Output Compare Register Bit 2
\ .equ	OCR2A_3	3	\ Timer/Counter2 Output Compare Register Bit 3
\ .equ	OCR2A_4	4	\ Timer/Counter2 Output Compare Register Bit 4
\ .equ	OCR2A_5	5	\ Timer/Counter2 Output Compare Register Bit 5
\ .equ	OCR2A_6	6	\ Timer/Counter2 Output Compare Register Bit 6
\ .equ	OCR2A_7	7	\ Timer/Counter2 Output Compare Register Bit 7

\ OCR2B - Timer/Counter2 Output Compare Register B
\ .equ	OCR2B_0	0	\ Timer/Counter2 Output Compare Register Bit 0
\ .equ	OCR2B_1	1	\ Timer/Counter2 Output Compare Register Bit 1
\ .equ	OCR2B_2	2	\ Timer/Counter2 Output Compare Register Bit 2
\ .equ	OCR2B_3	3	\ Timer/Counter2 Output Compare Register Bit 3
\ .equ	OCR2B_4	4	\ Timer/Counter2 Output Compare Register Bit 4
\ .equ	OCR2B_5	5	\ Timer/Counter2 Output Compare Register Bit 5
\ .equ	OCR2B_6	6	\ Timer/Counter2 Output Compare Register Bit 6
\ .equ	OCR2B_7	7	\ Timer/Counter2 Output Compare Register Bit 7

\ ASSR - Asynchronous Status Register
\ .equ	TCR2BUB	0	\ Timer/Counter Control Register2 Update Busy
\ .equ	TCR2AUB	1	\ Timer/Counter Control Register2 Update Busy
\ .equ	OCR2BUB	2	\ Output Compare Register 2 Update Busy
\ .equ	OCR2AUB	3	\ Output Compare Register2 Update Busy
\ .equ	TCN2UB	4	\ Timer/Counter2 Update Busy
\ .equ	AS2	5	\ Asynchronous Timer/Counter2
\ .equ	EXCLK	6	\ Enable External Clock Input

\ GTCCR - General Timer Counter Control register
\ .equ	PSRASY	1	\ Prescaler Reset Timer/Counter2
\ .equ	PSR2	PSRASY	\ For compatibility
\ .equ	TSM	7	\ Timer/Counter Synchronization Mode


\ ***** AD_CONVERTER *****************
\ ADMUX - The ADC multiplexer Selection Register
\ .equ	MUX0	0	\ Analog Channel and Gain Selection Bits
\ .equ	MUX1	1	\ Analog Channel and Gain Selection Bits
\ .equ	MUX2	2	\ Analog Channel and Gain Selection Bits
\ .equ	MUX3	3	\ Analog Channel and Gain Selection Bits
\ .equ	ADLAR	5	\ Left Adjust Result
\ .equ	REFS0	6	\ Reference Selection Bit 0
\ .equ	REFS1	7	\ Reference Selection Bit 1

\ ADCSRA - The ADC Control and Status register A
\ .equ	ADPS0	0	\ ADC  Prescaler Select Bits
\ .equ	ADPS1	1	\ ADC  Prescaler Select Bits
\ .equ	ADPS2	2	\ ADC  Prescaler Select Bits
\ .equ	ADIE	3	\ ADC Interrupt Enable
\ .equ	ADIF	4	\ ADC Interrupt Flag
\ .equ	ADATE	5	\ ADC  Auto Trigger Enable
\ .equ	ADSC	6	\ ADC Start Conversion
\ .equ	ADEN	7	\ ADC Enable

\ ADCSRB - The ADC Control and Status register B
\ .equ	ADTS0	0	\ ADC Auto Trigger Source bit 0
\ .equ	ADTS1	1	\ ADC Auto Trigger Source bit 1
\ .equ	ADTS2	2	\ ADC Auto Trigger Source bit 2
\ .equ	ACME	6	\

\ ADCH - ADC Data Register High Byte
\ .equ	ADCH0	0	\ ADC Data Register High Byte Bit 0
\ .equ	ADCH1	1	\ ADC Data Register High Byte Bit 1
\ .equ	ADCH2	2	\ ADC Data Register High Byte Bit 2
\ .equ	ADCH3	3	\ ADC Data Register High Byte Bit 3
\ .equ	ADCH4	4	\ ADC Data Register High Byte Bit 4
\ .equ	ADCH5	5	\ ADC Data Register High Byte Bit 5
\ .equ	ADCH6	6	\ ADC Data Register High Byte Bit 6
\ .equ	ADCH7	7	\ ADC Data Register High Byte Bit 7

\ ADCL - ADC Data Register Low Byte
\ .equ	ADCL0	0	\ ADC Data Register Low Byte Bit 0
\ .equ	ADCL1	1	\ ADC Data Register Low Byte Bit 1
\ .equ	ADCL2	2	\ ADC Data Register Low Byte Bit 2
\ .equ	ADCL3	3	\ ADC Data Register Low Byte Bit 3
\ .equ	ADCL4	4	\ ADC Data Register Low Byte Bit 4
\ .equ	ADCL5	5	\ ADC Data Register Low Byte Bit 5
\ .equ	ADCL6	6	\ ADC Data Register Low Byte Bit 6
\ .equ	ADCL7	7	\ ADC Data Register Low Byte Bit 7

\ DIDR0 - Digital Input Disable Register
\ .equ	ADC0D	0	\
\ .equ	ADC1D	1	\
\ .equ	ADC2D	2	\
\ .equ	ADC3D	3	\
\ .equ	ADC4D	4	\
\ .equ	ADC5D	5	\


\ ***** ANALOG_COMPARATOR ************
\ ACSR - Analog Comparator Control And Status Register
\ .equ	ACIS0	0	\ Analog Comparator Interrupt Mode Select bit 0
\ .equ	ACIS1	1	\ Analog Comparator Interrupt Mode Select bit 1
\ .equ	ACIC	2	\ Analog Comparator Input Capture Enable
\ .equ	ACIE	3	\ Analog Comparator Interrupt Enable
\ .equ	ACI	4	\ Analog Comparator Interrupt Flag
\ .equ	ACO	5	\ Analog Compare Output
\ .equ	ACBG	6	\ Analog Comparator Bandgap Select
\ .equ	ACD	7	\ Analog Comparator Disable

\ DIDR1 - Digital Input Disable Register 1
\ .equ	AIN0D	0	\ AIN0 Digital Input Disable
\ .equ	AIN1D	1	\ AIN1 Digital Input Disable


\ ***** PORTB ************************
\ PORTB - Port B Data Register
\ .equ	PORTB0	0	\ Port B Data Register bit 0
\ .equ	PB0	0	\ For compatibility
\ .equ	PORTB1	1	\ Port B Data Register bit 1
\ .equ	PB1	1	\ For compatibility
\ .equ	PORTB2	2	\ Port B Data Register bit 2
\ .equ	PB2	2	\ For compatibility
\ .equ	PORTB3	3	\ Port B Data Register bit 3
\ .equ	PB3	3	\ For compatibility
\ .equ	PORTB4	4	\ Port B Data Register bit 4
\ .equ	PB4	4	\ For compatibility
\ .equ	PORTB5	5	\ Port B Data Register bit 5
\ .equ	PB5	5	\ For compatibility
\ .equ	PORTB6	6	\ Port B Data Register bit 6
\ .equ	PB6	6	\ For compatibility
\ .equ	PORTB7	7	\ Port B Data Register bit 7
\ .equ	PB7	7	\ For compatibility

\ DDRB - Port B Data Direction Register
\ .equ	DDB0	0	\ Port B Data Direction Register bit 0
\ .equ	DDB1	1	\ Port B Data Direction Register bit 1
\ .equ	DDB2	2	\ Port B Data Direction Register bit 2
\ .equ	DDB3	3	\ Port B Data Direction Register bit 3
\ .equ	DDB4	4	\ Port B Data Direction Register bit 4
\ .equ	DDB5	5	\ Port B Data Direction Register bit 5
\ .equ	DDB6	6	\ Port B Data Direction Register bit 6
\ .equ	DDB7	7	\ Port B Data Direction Register bit 7

\ PINB - Port B Input Pins
\ .equ	PINB0	0	\ Port B Input Pins bit 0
\ .equ	PINB1	1	\ Port B Input Pins bit 1
\ .equ	PINB2	2	\ Port B Input Pins bit 2
\ .equ	PINB3	3	\ Port B Input Pins bit 3
\ .equ	PINB4	4	\ Port B Input Pins bit 4
\ .equ	PINB5	5	\ Port B Input Pins bit 5
\ .equ	PINB6	6	\ Port B Input Pins bit 6
\ .equ	PINB7	7	\ Port B Input Pins bit 7


\ ***** PORTC ************************
\ PORTC - Port C Data Register
\ .equ	PORTC0	0	\ Port C Data Register bit 0
\ .equ	PC0	0	\ For compatibility
\ .equ	PORTC1	1	\ Port C Data Register bit 1
\ .equ	PC1	1	\ For compatibility
\ .equ	PORTC2	2	\ Port C Data Register bit 2
\ .equ	PC2	2	\ For compatibility
\ .equ	PORTC3	3	\ Port C Data Register bit 3
\ .equ	PC3	3	\ For compatibility
\ .equ	PORTC4	4	\ Port C Data Register bit 4
\ .equ	PC4	4	\ For compatibility
\ .equ	PORTC5	5	\ Port C Data Register bit 5
\ .equ	PC5	5	\ For compatibility
\ .equ	PORTC6	6	\ Port C Data Register bit 6
\ .equ	PC6	6	\ For compatibility

\ DDRC - Port C Data Direction Register
\ .equ	DDC0	0	\ Port C Data Direction Register bit 0
\ .equ	DDC1	1	\ Port C Data Direction Register bit 1
\ .equ	DDC2	2	\ Port C Data Direction Register bit 2
\ .equ	DDC3	3	\ Port C Data Direction Register bit 3
\ .equ	DDC4	4	\ Port C Data Direction Register bit 4
\ .equ	DDC5	5	\ Port C Data Direction Register bit 5
\ .equ	DDC6	6	\ Port C Data Direction Register bit 6

\ PINC - Port C Input Pins
\ .equ	PINC0	0	\ Port C Input Pins bit 0
\ .equ	PINC1	1	\ Port C Input Pins bit 1
\ .equ	PINC2	2	\ Port C Input Pins bit 2
\ .equ	PINC3	3	\ Port C Input Pins bit 3
\ .equ	PINC4	4	\ Port C Input Pins bit 4
\ .equ	PINC5	5	\ Port C Input Pins bit 5
\ .equ	PINC6	6	\ Port C Input Pins bit 6


\ ***** PORTD ************************
\ PORTD - Port D Data Register
\ .equ	PORTD0	0	\ Port D Data Register bit 0
\ .equ	PD0	0	\ For compatibility
\ .equ	PORTD1	1	\ Port D Data Register bit 1
\ .equ	PD1	1	\ For compatibility
\ .equ	PORTD2	2	\ Port D Data Register bit 2
\ .equ	PD2	2	\ For compatibility
\ .equ	PORTD3	3	\ Port D Data Register bit 3
\ .equ	PD3	3	\ For compatibility
\ .equ	PORTD4	4	\ Port D Data Register bit 4
\ .equ	PD4	4	\ For compatibility
\ .equ	PORTD5	5	\ Port D Data Register bit 5
\ .equ	PD5	5	\ For compatibility
\ .equ	PORTD6	6	\ Port D Data Register bit 6
\ .equ	PD6	6	\ For compatibility
\ .equ	PORTD7	7	\ Port D Data Register bit 7
\ .equ	PD7	7	\ For compatibility

\ DDRD - Port D Data Direction Register
\ .equ	DDD0	0	\ Port D Data Direction Register bit 0
\ .equ	DDD1	1	\ Port D Data Direction Register bit 1
\ .equ	DDD2	2	\ Port D Data Direction Register bit 2
\ .equ	DDD3	3	\ Port D Data Direction Register bit 3
\ .equ	DDD4	4	\ Port D Data Direction Register bit 4
\ .equ	DDD5	5	\ Port D Data Direction Register bit 5
\ .equ	DDD6	6	\ Port D Data Direction Register bit 6
\ .equ	DDD7	7	\ Port D Data Direction Register bit 7

\ PIND - Port D Input Pins
\ .equ	PIND0	0	\ Port D Input Pins bit 0
\ .equ	PIND1	1	\ Port D Input Pins bit 1
\ .equ	PIND2	2	\ Port D Input Pins bit 2
\ .equ	PIND3	3	\ Port D Input Pins bit 3
\ .equ	PIND4	4	\ Port D Input Pins bit 4
\ .equ	PIND5	5	\ Port D Input Pins bit 5
\ .equ	PIND6	6	\ Port D Input Pins bit 6
\ .equ	PIND7	7	\ Port D Input Pins bit 7


\ ***** TIMER_COUNTER_0 **************
\ TIMSK0 - Timer/Counter0 Interrupt Mask Register
\ .equ	TOIE0	0	\ Timer/Counter0 Overflow Interrupt Enable
\ .equ	OCIE0A	1	\ Timer/Counter0 Output Compare Match A Interrupt Enable
\ .equ	OCIE0B	2	\ Timer/Counter0 Output Compare Match B Interrupt Enable

\ TIFR0 - Timer/Counter0 Interrupt Flag register
\ .equ	TOV0	0	\ Timer/Counter0 Overflow Flag
\ .equ	OCF0A	1	\ Timer/Counter0 Output Compare Flag 0A
\ .equ	OCF0B	2	\ Timer/Counter0 Output Compare Flag 0B

\ TCCR0A - Timer/Counter  Control Register A
\ .equ	WGM00	0	\ Waveform Generation Mode
\ .equ	WGM01	1	\ Waveform Generation Mode
\ .equ	COM0B0	4	\ Compare Output Mode, Fast PWm
\ .equ	COM0B1	5	\ Compare Output Mode, Fast PWm
\ .equ	COM0A0	6	\ Compare Output Mode, Phase Correct PWM Mode
\ .equ	COM0A1	7	\ Compare Output Mode, Phase Correct PWM Mode

\ TCCR0B - Timer/Counter Control Register B
\ .equ	CS00	0	\ Clock Select
\ .equ	CS01	1	\ Clock Select
\ .equ	CS02	2	\ Clock Select
\ .equ	WGM02	3	\
\ .equ	FOC0B	6	\ Force Output Compare B
\ .equ	FOC0A	7	\ Force Output Compare A

\ TCNT0 - Timer/Counter0
\ .equ	TCNT0_0	0	\
\ .equ	TCNT0_1	1	\
\ .equ	TCNT0_2	2	\
\ .equ	TCNT0_3	3	\
\ .equ	TCNT0_4	4	\
\ .equ	TCNT0_5	5	\
\ .equ	TCNT0_6	6	\
\ .equ	TCNT0_7	7	\

\ OCR0A - Timer/Counter0 Output Compare Register
\ .equ	OCR0A_0	0	\
\ .equ	OCR0A_1	1	\
\ .equ	OCR0A_2	2	\
\ .equ	OCR0A_3	3	\
\ .equ	OCR0A_4	4	\
\ .equ	OCR0A_5	5	\
\ .equ	OCR0A_6	6	\
\ .equ	OCR0A_7	7	\

\ OCR0B - Timer/Counter0 Output Compare Register
\ .equ	OCR0B_0	0	\
\ .equ	OCR0B_1	1	\
\ .equ	OCR0B_2	2	\
\ .equ	OCR0B_3	3	\
\ .equ	OCR0B_4	4	\
\ .equ	OCR0B_5	5	\
\ .equ	OCR0B_6	6	\
\ .equ	OCR0B_7	7	\

\ GTCCR - General Timer/Counter Control Register
\ .equ	PSRSYNC	0	\ Prescaler Reset Timer/Counter1 and Timer/Counter0
\ .equ	PSR10	PSRSYNC	\ For compatibility
\ .equ	TSM	7	\ Timer/Counter Synchronization Mode


\ ***** EXTERNAL_INTERRUPT ***********
\ EICRA - External Interrupt Control Register
\ .equ	ISC00	0	\ External Interrupt Sense Control 0 Bit 0
\ .equ	ISC01	1	\ External Interrupt Sense Control 0 Bit 1
\ .equ	ISC10	2	\ External Interrupt Sense Control 1 Bit 0
\ .equ	ISC11	3	\ External Interrupt Sense Control 1 Bit 1

\ EIMSK - External Interrupt Mask Register
\ .equ	INT0	0	\ External Interrupt Request 0 Enable
\ .equ	INT1	1	\ External Interrupt Request 1 Enable

\ EIFR - External Interrupt Flag Register
\ .equ	INTF0	0	\ External Interrupt Flag 0
\ .equ	INTF1	1	\ External Interrupt Flag 1

\ PCICR - Pin Change Interrupt Control Register
\ .equ	PCIE0	0	\ Pin Change Interrupt Enable 0
\ .equ	PCIE1	1	\ Pin Change Interrupt Enable 1
\ .equ	PCIE2	2	\ Pin Change Interrupt Enable 2

\ PCMSK2 - Pin Change Mask Register 2
\ .equ	PCINT16	0	\ Pin Change Enable Mask 16
\ .equ	PCINT17	1	\ Pin Change Enable Mask 17
\ .equ	PCINT18	2	\ Pin Change Enable Mask 18
\ .equ	PCINT19	3	\ Pin Change Enable Mask 19
\ .equ	PCINT20	4	\ Pin Change Enable Mask 20
\ .equ	PCINT21	5	\ Pin Change Enable Mask 21
\ .equ	PCINT22	6	\ Pin Change Enable Mask 22
\ .equ	PCINT23	7	\ Pin Change Enable Mask 23

\ PCMSK1 - Pin Change Mask Register 1
\ .equ	PCINT8	0	\ Pin Change Enable Mask 8
\ .equ	PCINT9	1	\ Pin Change Enable Mask 9
\ .equ	PCINT10	2	\ Pin Change Enable Mask 10
\ .equ	PCINT11	3	\ Pin Change Enable Mask 11
\ .equ	PCINT12	4	\ Pin Change Enable Mask 12
\ .equ	PCINT13	5	\ Pin Change Enable Mask 13
\ .equ	PCINT14	6	\ Pin Change Enable Mask 14

\ PCMSK0 - Pin Change Mask Register 0
\ .equ	PCINT0	0	\ Pin Change Enable Mask 0
\ .equ	PCINT1	1	\ Pin Change Enable Mask 1
\ .equ	PCINT2	2	\ Pin Change Enable Mask 2
\ .equ	PCINT3	3	\ Pin Change Enable Mask 3
\ .equ	PCINT4	4	\ Pin Change Enable Mask 4
\ .equ	PCINT5	5	\ Pin Change Enable Mask 5
\ .equ	PCINT6	6	\ Pin Change Enable Mask 6
\ .equ	PCINT7	7	\ Pin Change Enable Mask 7

\ PCIFR - Pin Change Interrupt Flag Register
\ .equ	PCIF0	0	\ Pin Change Interrupt Flag 0
\ .equ	PCIF1	1	\ Pin Change Interrupt Flag 1
\ .equ	PCIF2	2	\ Pin Change Interrupt Flag 2


\ ***** SPI **************************
\ SPDR - SPI Data Register
\ .equ	SPDR0	0	\ SPI Data Register bit 0
\ .equ	SPDR1	1	\ SPI Data Register bit 1
\ .equ	SPDR2	2	\ SPI Data Register bit 2
\ .equ	SPDR3	3	\ SPI Data Register bit 3
\ .equ	SPDR4	4	\ SPI Data Register bit 4
\ .equ	SPDR5	5	\ SPI Data Register bit 5
\ .equ	SPDR6	6	\ SPI Data Register bit 6
\ .equ	SPDR7	7	\ SPI Data Register bit 7

\ SPSR - SPI Status Register
\ .equ	SPI2X	0	\ Double SPI Speed Bit
\ .equ	WCOL	6	\ Write Collision Flag
\ .equ	SPIF	7	\ SPI Interrupt Flag

\ SPCR - SPI Control Register
\ .equ	SPR0	0	\ SPI Clock Rate Select 0
\ .equ	SPR1	1	\ SPI Clock Rate Select 1
\ .equ	CPHA	2	\ Clock Phase
\ .equ	CPOL	3	\ Clock polarity
\ .equ	MSTR	4	\ Master/Slave Select
\ .equ	DORD	5	\ Data Order
\ .equ	SPE	6	\ SPI Enable
\ .equ	SPIE	7	\ SPI Interrupt Enable


\ ***** WATCHDOG *********************
\ WDTCSR - Watchdog Timer Control Register
0 .equ	WDP0		\ Watch Dog Timer Prescaler bit 0
1 .equ	WDP1		\ Watch Dog Timer Prescaler bit 1
2 .equ	WDP2		\ Watch Dog Timer Prescaler bit 2
3 .equ	WDE		\ Watch Dog Enable
4 .equ	WDCE		\ Watchdog Change Enable
5 .equ	WDP3		\ Watchdog Timer Prescaler Bit 3
6 .equ	WDIE		\ Watchdog Timeout Interrupt Enable
7 .equ	WDIF		\ Watchdog Timeout Interrupt Flag


\ ***** EEPROM ***********************
\ EEARL - EEPROM Address Register Low Byte
\ .equ	EEAR0	0	\ EEPROM Read/Write Access Bit 0
\ .equ	EEAR1	1	\ EEPROM Read/Write Access Bit 1
\ .equ	EEAR2	2	\ EEPROM Read/Write Access Bit 2
\ .equ	EEAR3	3	\ EEPROM Read/Write Access Bit 3
\ .equ	EEAR4	4	\ EEPROM Read/Write Access Bit 4
\ .equ	EEAR5	5	\ EEPROM Read/Write Access Bit 5
\ .equ	EEAR6	6	\ EEPROM Read/Write Access Bit 6
\ .equ	EEAR7	7	\ EEPROM Read/Write Access Bit 7

\ EEARH - EEPROM Address Register High Byte
\ .equ	EEAR8	0	\ EEPROM Read/Write Access Bit 8
\ .equ	EEAR9	1	\ EEPROM Read/Write Access Bit 9

\ EEDR - EEPROM Data Register
\ .equ	EEDR0	0	\ EEPROM Data Register bit 0
\ .equ	EEDR1	1	\ EEPROM Data Register bit 1
\ .equ	EEDR2	2	\ EEPROM Data Register bit 2
\ .equ	EEDR3	3	\ EEPROM Data Register bit 3
\ .equ	EEDR4	4	\ EEPROM Data Register bit 4
\ .equ	EEDR5	5	\ EEPROM Data Register bit 5
\ .equ	EEDR6	6	\ EEPROM Data Register bit 6
\ .equ	EEDR7	7	\ EEPROM Data Register bit 7

\ EECR - EEPROM Control Register
0 .equ	EERE		\ EEPROM Read Enable
1 .equ	EEPE		\ EEPROM Write Enable
2 .equ	EEMPE		\ EEPROM Master Write Enable
3 .equ	EERIE		\ EEPROM Ready Interrupt Enable
4 .equ	EEPM0		\ EEPROM Programming Mode Bit 0
5 .equ	EEPM1		\ EEPROM Programming Mode Bit 1


\ ***** CPU **************************
\ SREG - Status Register
0 .equ	SREG_C		\ Carry Flag
1 .equ	SREG_Z		\ Zero Flag
2 .equ	SREG_N		\ Negative Flag
3 .equ	SREG_V		\ Two's Complement Overflow Flag
4 .equ	SREG_S		\ Sign Bit
5 .equ	SREG_H		\ Half Carry Flag
6 .equ	SREG_T		\ Bit Copy Storage
7 .equ	SREG_I		\ Global Interrupt Enable

\ OSCCAL - Oscillator Calibration Value
0 .equ	CAL0		\ Oscillator Calibration Value Bit0
1 .equ	CAL1		\ Oscillator Calibration Value Bit1
2 .equ	CAL2		\ Oscillator Calibration Value Bit2
3 .equ	CAL3		\ Oscillator Calibration Value Bit3
4 .equ	CAL4		\ Oscillator Calibration Value Bit4
5 .equ	CAL5		\ Oscillator Calibration Value Bit5
6 .equ	CAL6		\ Oscillator Calibration Value Bit6
7 .equ	CAL7		\ Oscillator Calibration Value Bit7

\ CLKPR - Clock Prescale Register
0 .equ	CLKPS0		\ Clock Prescaler Select Bit 0
1 .equ	CLKPS1		\ Clock Prescaler Select Bit 1
2 .equ	CLKPS2		\ Clock Prescaler Select Bit 2
3 .equ	CLKPS3		\ Clock Prescaler Select Bit 3
7 .equ	CLKPCE		\ Clock Prescaler Change Enable

\ SPMCSR - Store Program Memory Control and Status Register
0 .equ	SELFPRGEN	\ Self Programming Enable
1 .equ	PGERS		\ Page Erase
2 .equ	PGWRT		\ Page Write
3 .equ	BLBSET		\ Boot Lock Bit Set
4 .equ	RWWSRE		\ Read-While-Write section read enable
6 .equ	RWWSB		\ Read-While-Write Section Busy
7 .equ	SPMIE		\ SPM Interrupt Enable

\ MCUCR - MCU Control Register
0 .equ	IVCE
1 .equ	IVSEL
4 .equ	PUD

\ MCUSR - MCU Status Register
0       .equ PORF       \ Power-on reset flag
1       .equ EXTRF      \ External Reset Flag
EXTRF   .equ EXTREF     \ For compatibility
2       .equ BORF       \ Brown-out Reset Flag
3       .equ WDRF       \ Watchdog Reset Flag

\ SMCR - Sleep Mode Control Register
0 .equ	SE	\ Sleep Enable
1 .equ	SM0	\ Sleep Mode Select Bit 0
2 .equ	SM1	\ Sleep Mode Select Bit 1
3 .equ	SM2	\ Sleep Mode Select Bit 2

\ GPIOR2 - General Purpose I/O Register 2
0 .equ	GPIOR20
1 .equ	GPIOR21
2 .equ	GPIOR22
3 .equ	GPIOR23
4 .equ	GPIOR24
5 .equ	GPIOR25
6 .equ	GPIOR26
7 .equ	GPIOR27

\ GPIOR1 - General Purpose I/O Register 1
0 .equ	GPIOR10
1 .equ	GPIOR11
2 .equ	GPIOR12
3 .equ	GPIOR13
4 .equ	GPIOR14
5 .equ	GPIOR15
6 .equ	GPIOR16
7 .equ	GPIOR17

\ GPIOR0 - General Purpose I/O Register 0
0 .equ	GPIOR00
1 .equ	GPIOR01
2 .equ	GPIOR02
3 .equ	GPIOR03
4 .equ	GPIOR04
5 .equ	GPIOR05
6 .equ	GPIOR06
7 .equ	GPIOR07

\ PRR - Power Reduction Register
0       .equ	PRADC       \ Power Reduction ADC
1       .equ	PRUSART0    \ Power Reduction USART
2       .equ	PRSPI       \ Power Reduction Serial Peripheral Interface
3       .equ	PRTIM1      \ Power Reduction Timer/Counter1
5       .equ	PRTIM0      \ Power Reduction Timer/Counter0
6       .equ	PRTIM2      \ Power Reduction Timer/Counter2
7       .equ	PRTWI       \ Power Reduction TWI

\ ***** LOCKSBITS ********************************************************
0       .equ	LB1         \ Lock bit
1       .equ	LB2         \ Lock bit
2       .equ	BLB01       \ Boot Lock bit
3       .equ	BLB02       \ Boot Lock bit
4       .equ	BLB11       \ Boot lock bit
5       .equ	BLB12       \ Boot lock bit

\ ***** FUSES ************************************************************
\ LOW fuse bits
0       .equ	CKSEL0      \ Select Clock Source
1       .equ	CKSEL1      \ Select Clock Source
2       .equ	CKSEL2      \ Select Clock Source
3       .equ	CKSEL3      \ Select Clock Source
4       .equ	SUT0        \ Select start-up time
5       .equ	SUT1        \ Select start-up time
6       .equ	CKOUT       \ Clock output
7       .equ	CKDIV8      \ Divide clock by 8

\ HIGH fuse bits
0       .equ	BOOTRST     \ Select reset vector
1       .equ	BOOTSZ0     \ Select boot size
2       .equ	BOOTSZ1     \ Select boot size
3       .equ	EESAVE      \ EEPROM memory is preserved through chip erase
4       .equ	WDTON       \ Watchdog Timer Always On
5       .equ	SPIEN       \ Enable Serial programming and Data Downloading
6       .equ	DWEN        \ debugWIRE Enable
7       .equ	RSTDISBL    \ External reset disable

\ EXTENDED fuse bits
0       .equ	BODLEVEL0   \ Brown-out Detector trigger level
1       .equ	BODLEVEL1   \ Brown-out Detector trigger level
2       .equ	BODLEVEL2   \ Brown-out Detector trigger level

\ ***** CPU REGISTER DEFINITIONS *****************************************
\ R27     .def	XH
\ R26     .def	XL
\ R29     .def	YH
\ R28     .def	YL
\ R31     .def	ZH
\ R30     .def	ZL

\ ***** DATA MEMORY DECLARATIONS *****************************************
$3fff   .equ FLASHEND       \ Note: Word address
$00ff	.equ IOEND
$0100	.equ SRAM_START
2048	.equ SRAM_SIZE
$08ff	.equ RAMEND
$0000	.equ XRAMEND
$03ff	.equ E2END
$03ff	.equ EEPROMEND
10	.equ EEADRBITS
\ #pragma AVRPART MEMORY PROG_FLASH 32768
\ #pragma AVRPART MEMORY EEPROM 1024
\ #pragma AVRPART MEMORY INT_SRAM SIZE 2048
\ #pragma AVRPART MEMORY INT_SRAM START_ADDR $100


\ ***** BOOTLOADER DECLARATIONS ******************************************
$3800   .equ	NRWW_START_ADDR
$3fff   .equ	NRWW_STOP_ADDR
$0      .equ	RWW_START_ADDR
$37ff   .equ	RWW_STOP_ADDR
64      .equ	PAGESIZE
$3f00   .equ	FIRSTBOOTSTART
$3e00   .equ	SECONDBOOTSTART
$3c00   .equ	THIRDBOOTSTART
$3800   .equ	FOURTHBOOTSTART
FIRSTBOOTSTART  .equ	SMALLBOOTSTART
FOURTHBOOTSTART .equ	LARGEBOOTSTART


\ ***** INTERRUPT VECTORS ************************************************
$0002   .equ	INT0addr	\ External Interrupt Request 0
$0004   .equ	INT1addr	\ External Interrupt Request 1
$0006   .equ	PCI0addr	\ Pin Change Interrupt Request 0
$0008   .equ	PCI1addr	\ Pin Change Interrupt Request 0
$000a   .equ	PCI2addr	\ Pin Change Interrupt Request 1
$000c   .equ	WDTaddr		\ Watchdog Time-out Interrupt
$000e   .equ	OC2Aaddr	\ Timer/Counter2 Compare Match A
$0010   .equ	OC2Baddr	\ Timer/Counter2 Compare Match A
$0012   .equ	OVF2addr	\ Timer/Counter2 Overflow
$0014   .equ	ICP1addr	\ Timer/Counter1 Capture Event
$0016   .equ	OC1Aaddr	\ Timer/Counter1 Compare Match A
$0018   .equ	OC1Baddr	\ Timer/Counter1 Compare Match B
$001a   .equ	OVF1addr	\ Timer/Counter1 Overflow
$001c   .equ	OC0Aaddr	\ TimerCounter0 Compare Match A
$001e   .equ	OC0Baddr	\ TimerCounter0 Compare Match B
$0020   .equ	OVF0addr	\ Timer/Couner0 Overflow
$0022   .equ	SPIaddr		\ SPI Serial Transfer Complete
$0024   .equ	URXCaddr	\ USART Rx Complete
$0026   .equ	UDREaddr	\ USART, Data Register Empty
$0028   .equ	UTXCaddr	\ USART Tx Complete
$002a   .equ	ADCCaddr	\ ADC Conversion Complete
$002c   .equ	ERDYaddr	\ EEPROM Ready
$002e   .equ	ACIaddr		\ Analog Comparator
$0030   .equ	TWIaddr		\ Two-wire Serial Interface
$0032   .equ	SPMRaddr	\ Store Program Memory Read

52      .equ	INT_VECTORS_SIZE    \ size in words

\ *** End of File ***********************
